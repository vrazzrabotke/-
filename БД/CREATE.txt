Create table  country(
id SERIAL PRIMARY KEY,
name VARCHAR (40)
);

Create table type_aircraft(
id SERIAL PRIMARY KEY,
name VARCHAR (40),
id_country integer,
FOREIGN KEY (id_country) REFERENCES country (id)
on update no action on delete cascade,
service_time numeric,
speed numeric,
capacity numeric
);

Create table salon(
id SERIAL PRIMARY KEY,
name VARCHAR (40)
);

Create table  aircraft(
id SERIAL PRIMARY KEY,
name VARCHAR (40),
id_type integer,
FOREIGN KEY (id_type) REFERENCES type_aircraft (id)
on update no action on delete cascade,
id_salon integer,
FOREIGN KEY (id_salon) REFERENCES salon (id)
on update no action on delete cascade,
year numeric,
cost numeric
);

Create table  type_spare(
id SERIAL PRIMARY KEY,
name VARCHAR (40)
);

Create table supplier(
id SERIAL PRIMARY KEY,
name VARCHAR (40)
);

Create table spare(
id SERIAL PRIMARY KEY,
name VARCHAR(40),
id_supplier integer,
FOREIGN KEY (id_supplier) REFERENCES supplier (id)
on update no action on delete cascade,
id_type integer,
FOREIGN KEY (id_type) REFERENCES type_spare (id)
on update no action on delete cascade,
cost numeric
);


Create table repair(
id SERIAL PRIMARY KEY,
id_aircraft integer,
FOREIGN KEY (id_aircraft) REFERENCES aircraft (id)
on update no action on delete cascade,
id_spare integer,
FOREIGN KEY (id_spare) REFERENCES spare (id)
on update no action on delete cascade
);



INSERT INTO country(name)
VALUES
('Russia'),
('Italy'),
('USA'),
('China'),
('Britain');



 INSERT INTO salon(name)
VALUES
('Le Bourget'),
('MAKC'),
('BIAS');




 INSERT INTO type_spare(name)
VALUES
('engine'),
('screw system'),
('radar');



INSERT INTO supplier(name)
VALUES
('GE Aviation'),
('Snecma');




INSERT INTO type_aircraft (name, id_country, service_time, speed, capacity) VALUES
('TY-134',1,10,880,96),
('TY-154',1,15,950,150),
('IL-86',2,10,750,180),
('IL-62',2,20,950,350),
('Boeing-747',3,20,940,120),
('Boeing-777',3,25,600,400),
('KM-14',4,25,680,300),
('KM-4',4,20,950,220),
('Airbus',5,15,895,280),
('Airbus-153',5,12,700,200);



INSERT INTO aircraft (name, id_type, id_salon, year, cost) VALUES
('TY67',1,1,2015,10000), 
('TY23',2,2,2015,9000),
('IL12',3,3,2015,8000),
('IL45',4,1,2015,7500),
('Boeing73',5,2,2015,8400),
('Boeing38',6,3,2015,9300),
('KM50',7,1,2000,11000),
('KM23',8,2,2000,8500),
('Airbus16',9,3,2000,13000),
('Airbus82',10,1,2010,9700),
('TY95',1,2,2017,10200),
('TY03',2,3,2003,6500),
('IL51',3,1,1995,5000),
('IL77',4,2,2001,7200),
('Boeing32',5,3,1998,6800);





INSERT INTO spare (name, id_supplier, id_type, cost) VALUES
('engine-A2',1,1,500),
('screw system-HT6',2,2,120),
('radar-R0',1,3,350),
('engine-F56',2,1,240),
('screw system-ST33',1,2,710),
('radar-JI81',2,3,520);



INSERT INTO repair (id_aircraft, id_spare) VALUES
(7,1),
(13,2),
(14,3),
(7,4),
(13,5),
(14,6);


\\\\\\\ func1
create or replace function aircraft_type_info() 
returns table (type_name varchar(40),year numeric,service_time numeric,country varchar(40),cost numeric,speed numeric,capacity numeric)
as $$ begin
return query
select type_aircraft.name as type_name, 
aircraft.year, 
type_aircraft.service_time, 
country.name as country, 
aircraft.cost, 
type_aircraft.speed,
type_aircraft.capacity
from type_aircraft  
join aircraft on type_aircraft.id = aircraft.id_type 
join country on type_aircraft.id_country = country.id
order by type_name;
end $$
language plpgsql;

select * from aircraft_type_info();

\\\\\\\ func2.1
create or replace function aircraft_type_order_by_year() 
returns table (type_name varchar(40),year numeric,service_time numeric,country varchar(40),cost numeric,speed numeric,capacity numeric)
as $$ begin
return query
select type_aircraft.name as type_name, 
aircraft.year, 
type_aircraft.service_time, 
country.name as country, 
aircraft.cost, 
type_aircraft.speed,
type_aircraft.capacity
from type_aircraft  
join aircraft on type_aircraft.id = aircraft.id_type 
join country on type_aircraft.id_country = country.id
order by year;
end $$
language plpgsql;

select * from aircraft_type_order_by_year();


\\\\\\\ func2.2
create or replace function aircraft_type_order_by_cost() 
returns table (type_name varchar(40),year numeric,service_time numeric,country varchar(40),cost numeric,speed numeric,capacity numeric)
as $$ begin
return query
select type_aircraft.name as type_name, 
aircraft.year, 
type_aircraft.service_time, 
country.name as country, 
aircraft.cost, 
type_aircraft.speed,
type_aircraft.capacity
from type_aircraft  
join aircraft on type_aircraft.id = aircraft.id_type 
join country on type_aircraft.id_country = country.id
order by cost;
end $$
language plpgsql;

select * from aircraft_type_order_by_cost();


\\\\\\\ func2.3
create or replace function aircraft_type_order_by_service_time() 
returns table (type_name varchar(40),year numeric,service_time numeric,country varchar(40),cost numeric,speed numeric,capacity numeric)
as $$ begin
return query
select type_aircraft.name as type_name, 
aircraft.year, 
type_aircraft.service_time, 
country.name as country, 
aircraft.cost, 
type_aircraft.speed,
type_aircraft.capacity
from type_aircraft  
join aircraft on type_aircraft.id = aircraft.id_type 
join country on type_aircraft.id_country = country.id
order by service_time;
end $$
language plpgsql;

select * from aircraft_type_order_by_service_time();


\\\\\\\\func 3

create or replace function perc_old_aircraft(max_service_time int)
returns table (name varchar(40) ,count bigint, all_count bigint, perc float,service_time numeric) as $$
declare old_count int;
BEGIN
old_count = (select count(select aircraft.id from aircraft
join type_aircraft on type_aircraft.id = aircraft.id_type
where type_aircraft.service_time > max_service_time group by aircraft.id, type_aircraft.service_time) 
from aircraft group by aircraft.id
);
return query (select 
aircraft.name, old_count as count,count(aircraft.id) as all_count, 
count(aircraft.id)/all_count::bigint::float as perc, 
type_aircraft.service_time 
from aircraft 
join type_aircraft on aircraft.id_type = type_aircraft.id 
group by aircraft.name,type_aircraft.service_time,aircraft.id
order by aircraft.name
);
END; $$ language plpgsql;


select * from  perc_old_aircraft(20);


count(select aircraft.id from aircraft
join type_aircraft on type_aircraft.id = aircraft.id_type
where type_aircraft.service_time > 20 group by aircraft.id, type_aircraft.service_time;







